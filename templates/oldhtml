<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>{{ .title }}</title>
  <link rel="stylesheet" href="/static/css/style.css">
  <link rel="icon" href="/static/favicon.ico" type="image/x-icon">
</head>
<body>
  <h1>{{ .title }}</h1>
  <p>Total users: {{ .count }}</p>

  <!-- Existing Table for All Users -->
  <table>
    <thead>
      <tr>
        <th>ID</th>
        <th>Name</th>
        <th>Email</th>
        <th>Role</th>
        <th>Active</th>
      </tr>
    </thead>
    <tbody>
      {{ range .users }}
      <tr>
        <td>{{ ._id }}</td>
        <td>{{ .name }}</td>
        <td>{{ .email }}</td>
        <td>{{ .role }}</td>
        <td>{{ if .active }}‚úÖ true {{ else }}‚ùå false {{ end }}</td>
      </tr>
      {{ end }}
    </tbody>
  </table>

  <hr>

<!-- üîç Fetch by ID Section -->
<h2>Find User by ID</h2>
<input type="text" id="userIdInput" placeholder="Enter MongoDB ObjectID">
<button onclick="fetchUserById()">Get User</button>

<!-- üì¶ Placeholder for result -->
<div id="userResult" style="margin-top: 20px;"></div>

<!-- üì¶ Form for Update -->
<div id="updateForm" style="margin-top: 20px; display: none;">
  <h3>Update User</h3>
  <input type="text" id="updateName" placeholder="Name">
  <input type="email" id="updateEmail" placeholder="Email">
  <input type="text" id="updateRole" placeholder="Role">
  <label>
    Active:
    <input type="checkbox" id="updateActive">
  </label>
  <button onclick="updateUser()">Update</button>
  <button onclick="cancelUpdate()">Cancel</button>
</div>

<!-- JS to Handle Fetch, Delete, and Update -->
<script>
  let currentUserId = null;

  function fetchUserById() {
    const id = document.getElementById("userIdInput").value.trim();
    const resultDiv = document.getElementById("userResult");

    if (!id) {
      resultDiv.innerHTML = "<p style='color: red;'>Please enter a user ID</p>";
      return;
    }

    fetch(`/api/users/${id}`)
      .then((res) => {
        if (!res.ok) throw new Error("User not found");
        return res.json();
      })
      .then((data) => {
        currentUserId = id;
        resultDiv.innerHTML = `
          <h3>User Info</h3>
          <p><strong>Name:</strong> ${data.name}</p>
          <p><strong>Email:</strong> ${data.email}</p>
          <p><strong>Role:</strong> ${data.role}</p>
          <p><strong>Active:</strong> ${data.active ? "‚úÖ true" : "‚ùå false"}</p>
          <button onclick="deleteUser('${id}')" style="color: white; background-color: red; border: none; padding: 8px 12px; margin-top: 10px;">Delete User</button>
          <button onclick="showUpdateForm('${id}', '${data.name}', '${data.email}', '${data.role}', ${data.active})" style="background-color: yellow; padding: 8px 12px; margin-top: 10px;">Update User</button>
        `;
      })
      .catch((err) => {
        resultDiv.innerHTML = `<p style='color: red;'>${err.message}</p>`;
      });
  }

  function deleteUser(id) {
    if (!confirm("Are you sure you want to delete this user?")) return;

    fetch(`/api/users/${id}`, {
      method: 'DELETE'
    })
      .then((res) => {
        if (!res.ok) throw new Error("Failed to delete user");
        return res.json();
      })
      .then(() => {
        document.getElementById("userResult").innerHTML = "<p style='color: green;'>‚úÖ User deleted successfully</p>";
        document.getElementById("userIdInput").value = "";
      })
      .catch((err) => {
        document.getElementById("userResult").innerHTML = `<p style='color: red;'>${err.message}</p>`;
      });
  }

  function showUpdateForm(id, name, email, role, active) {
    document.getElementById("updateName").value = name;
    document.getElementById("updateEmail").value = email;
    document.getElementById("updateRole").value = role;
    document.getElementById("updateActive").checked = active;
    document.getElementById("updateForm").style.display = "block";
  }

  function cancelUpdate() {
    document.getElementById("updateForm").style.display = "none";
  }

  function updateUser() {
    const name = document.getElementById("updateName").value.trim();
    const email = document.getElementById("updateEmail").value.trim();
    const role = document.getElementById("updateRole").value.trim();
    const active = document.getElementById("updateActive").checked;

    if (!name || !email || !role) {
      alert("Please fill in all fields");
      return;
    }

    const updatedUser = { name, email, role, active };

    fetch(`/api/users/${currentUserId}`, {
      method: 'PUT', // or 'PATCH' depending on the use case
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(updatedUser)
    })
      .then((res) => {
        if (!res.ok) throw new Error("Failed to update user");
        return res.json();
      })
      .then(() => {
        alert("User updated successfully");
        cancelUpdate();
        fetchUserById(); // Refresh the displayed user info
      })
      .catch((err) => {
        alert(`Error: ${err.message}`);
      });
  }
</script>

</body>
</html>
